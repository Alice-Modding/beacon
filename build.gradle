plugins {
	id 'fabric-loom' version "1.6.5"
	id 'maven-publish'
	id "com.github.breadmoirai.github-release" version "2.2.12"
	id "com.matthewprenger.cursegradle" version "1.4.0"
	id "com.modrinth.minotaur" version "2.+"
	id "elect86.gik" version "0.0.4"
}

version = "$project.mod_version+mc$project.minecraft_version"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven {
		name = "me.shedaniel.cloth"
		url = "https://maven.shedaniel.me"
	}
	maven {
		name = "com.terraformersmc"
		url = "https://maven.terraformersmc.com/releases"
	}
	maven {
		name = "maven.modrinth"
		url = 'https://api.modrinth.com/maven'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:$project.minecraft_version"
	mappings "net.fabricmc:yarn:$project.yarn_mappings:v2"
	modImplementation "net.fabricmc:fabric-loader:$project.loader_version"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation include(fabricApi.module("fabric-api-base", project.fabric_api_version))
	modImplementation include(fabricApi.module("fabric-command-api-v2", project.fabric_api_version))
	modImplementation "net.fabricmc.fabric-api:fabric-api:$project.fabric_api_version"

	implementation include("org.spongepowered:configurate-core:$project.configurate_version")
	implementation include("org.spongepowered:configurate-hocon:$project.configurate_version")
	include("io.leangen.geantyref:geantyref:$project.geantyref_version")
	include("com.typesafe:config:$project.hocon_version")


	modCompileOnly "maven.modrinth:sodium:$project.sodium_version"
	modCompileOnly "maven.modrinth:starlight:$project.starlight_version"
	modCompileOnly "ca.stellardrift:confabricate:$project.confabricate_version"

	modImplementation "me.shedaniel.cloth:cloth-config-fabric:$project.cloth_config_version"
	modImplementation "com.terraformersmc:modmenu:$project.mod_menu_version"
}

processResources {
	inputs.property "version", project.version
	inputs.property "clothConfigVersion", project.cloth_config_version
	inputs.property "modMenuVersion", project.mod_menu_version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
		expand "clothConfigVersion": project.cloth_config_version
		expand "modMenuVersion": project.mod_menu_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
	it.options.encoding = "UTF-8"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(AbstractArchiveTask).configureEach {
	archiveBaseName.set(project.archives_base_name)
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}